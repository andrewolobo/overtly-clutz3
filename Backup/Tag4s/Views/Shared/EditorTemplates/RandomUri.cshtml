@model Tag4s.Data.RandomUri
@using Tag4s.Data
@using Tag4s.Filters
@using Tag4s.Helpers
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    //ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "RandomUri", "RandomUri", ref translation), controllername.TranslateString(ref translation));
    //BreadCrum.SetName(ViewBag.Title, Session);
}

<fieldset class="Tag4s-fieldset">
    <legend>@Html.DisplayNameTranslatedFor("", "RandomUri", "RandomUri", ref translation)</legend>
    
    <fieldset class="no-margin">
        <div class="row @(Html.HasErrorFor(m=>m.Uri) ? "error" : "")" title="@Html.GetErrorMessageFor(m=>m.Uri)">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.Uri, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.EditorFor(model => model.Uri)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(Html.HasErrorFor(m=>m.RandomParameter) ? "error" : "")" title="@Html.GetErrorMessageFor(m=>m.RandomParameter)">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.RandomParameter, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.EditorFor(model => model.RandomParameter)
        </div>
    </fieldset>
    
    @Html.HiddenFor(m=>m.UserContractUriId)


</fieldset>