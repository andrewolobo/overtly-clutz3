@model Tag4s.Data.UserPassword
@using System.Web.Optimization;
@using Tag4s.Data
@using Tag4s.Helpers;
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "PassResetForm", "PassResetForm", ref translation), controllername.TranslateString(ref translation));
    BreadCrum.SetName(ViewBag.Title, Session);
}
@section scripts
{
    <script>


    
    </script>
    
    @Scripts.Render("~/bundles/jqueryval")

}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.UserName)
    @Html.HiddenFor(model => model.IsAccountAdmin)
    @Html.HiddenFor(model => model.IsReset)
    @Html.HiddenFor(model => model.EmailAddress)
    @Html.HiddenFor(model => model.Password)

    <fieldset>
        <fieldset class="no-margin">
            <div class="row">
                <label>
                    @Html.DisplayNameTranslatedFor(m => m.UserName, ref translation, TranslationTypes.Entity, controllername, actionname)
                </label>
                <label class="edit-label">
                    @Html.DisplayFor(model => model.UserName)
                </label>
            </div>
        </fieldset>
        
        <fieldset class="no-margin">
            <div class="row">
                <label>
                    @Html.DisplayNameTranslatedFor(m => m.EmailAddress, ref translation, TranslationTypes.Entity, controllername, actionname)
                </label>
                <label class="edit-label">
                    @Html.DisplayFor(model => model.EmailAddress)
                </label>
            </div>
        </fieldset>
        
        <fieldset class="no-margin">
            <div class="row @(Html.HasError("nPass") ? "error" : "")" title="@Html.GetErrorMessage("nPass")">
                <label>
                    @Html.DisplayNameTranslatedFor("", "New Password", "New Password", ref translation).ToString()
                </label>
                @Html.Password("nPass")
            </div>
        </fieldset>

        <fieldset class="no-margin">
            <div class="row">
                <label>
                    @Html.DisplayNameTranslatedFor("", "New Password Confirmation", "New Password Confirmation", ref translation).ToString()
                </label>
                @Html.Password("nPassConfirm")
            </div>
        </fieldset>


    </fieldset>

    <p>
        <input type="submit" value="@Html.DisplayNameTranslatedFor("", "Create", "Create", ref translation)" />
    </p>
}