@model List<Tag4s.Models.UserContractParametersModel>
@using System.Web.UI.WebControls
@using Tag4s.Helpers;
@using Tag4s.Data
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "ContractEditByRule", "ContractEditByRule", ref translation), controllername.TranslateString(ref translation));
    BreadCrum.SetName(ViewBag.Title, Session);
    switch (filter.Key)
    {
        case Tag4s.Filters.ViewFilterKeys.nofilter:
        default:
            ViewBag.Title = "ContractEditByRule".TranslateString(ref translation);
            break;
    }
    BreadCrum.SetName(ViewBag.Title, Session);
    var contractName = ViewBag.ContractName as string;
}

@section scripts
{
    <script type="text/javascript">



    </script>
}


<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EditByRule", "UserContract"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset class="Tag4s-fieldset">
    
        <legend>@Html.DisplayNameTranslatedFor("", "UserContract", "UserContract", ref translation)</legend>

        @{ var index = 0;}
        @foreach (var model in Model)
        {
            @Html.EditorFor(m=>model,"UserContractParametersModel",string.Format("[{0}]",index),new {CurrentIndex = index})
            index++;
        }

    </fieldset>

    <p>
        <input type="submit" value="@Html.DisplayNameTranslatedFor("", "Save", "Save", ref translation)" />
    </p>
}

<div>
    @BreadCrum.ActionLinkStepBack(Session, ref translation)
</div>