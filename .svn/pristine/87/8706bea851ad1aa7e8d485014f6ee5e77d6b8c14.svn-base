@model Tag4s.Models.ContractRedirectRedirectTypeModel
@using Tag4s.Data
@using Tag4s.Filters
@using Tag4s.Helpers
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    //ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "RedirectType", "RedirectType", ref translation), controllername.TranslateString(ref translation));
    //BreadCrum.SetName(ViewBag.Title, Session);
}

    @Html.HiddenFor(model => model.RedirectType)
    @Html.HiddenFor(model => model.RedirectTypeValues)

<fieldset class="no-margin">
    <div class="row @(Html.HasErrorFor(m => m.RedirectType.Name) ? "error" : "")" title="@Html.GetErrorMessageFor(m => m.RedirectType.Name)">
        <label>
            @(Model.RedirectType.Name.TranslateString(ref translation))
            @*@Html.DisplayNameTranslatedFor(model => model.UserContractRedirect.RuleActive, ref translation, TranslationTypes.Entity, controllername, actionname)*@
        </label>
        @Html.DropDownListFor(model => model.SelectedValue.Id, new SelectList(Model.RedirectTypeValues, "Value", "Text", Model.SelectedValue!=null?Model.SelectedValue.Id.ToString():Guid.Empty.ToString()))
    </div>
</fieldset>
