@model Tag4s.Models.AdministratorModel
@using System.Web.Optimization;
@using Tag4s.Data
@using Tag4s.Helpers;
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "Reseller", "Reseller", ref translation), controllername.TranslateString(ref translation));
    BreadCrum.SetName(ViewBag.Title, Session);
}
@section scripts
{
    <script>
       
    </script>
    
    @Scripts.Render("~/bundles/jqueryval")

}

<h2>@ViewBag.Title</h2>
@(Html.Kendo().Grid(Model.Resellers)
      .Name("Grid")
      //.Localizable("nl-NL")
          .ToolBar(commands => { commands.Template(c => Utilities.ActionImage(customImages.Create, "Create", "User", new { filterkey = filter.Key, filterid = filter.Id, userRoleId = Utilities.UserRoleReseller() })); })
      .DataSource(dataBinding =>
          dataBinding
              .Server()
              .Model(model => model.Id(m => m.Id))
              .PageSize(10)
              .Sort(sortOrder => sortOrder.Add(o => o.Lastname).Ascending())
      )
      .Columns(columns =>
      {
          columns.Bound(c => c.Organisation).Title("Organisation".TranslateString(ref translation));
          columns.Bound(c => c.Firstname).Title("FirstName".TranslateString(ref translation));
          columns.Bound(c => c.Lastname).Title("Lastname".TranslateString(ref translation));
          columns.Bound(c => c.EmailAddress).Title("EmailAddress".TranslateString(ref translation));
          //columns.Bound(c => c.UserRole.Name).Title("Role".TranslateString(ref translation));
          //columns.Bound(c => c.UserContracts.Count).Title(Html.DisplayNameTranslatedFor("", "UserContracts", "UserContracts", ref translation).ToString()).Template(c => Utilities.ActionImageWithText(c.UserContracts.Count.ToString(), customImages.Tooltip, "Index", "UserContract", new { userId = c.Id }));
          columns.Bound(c => c.User1.Count).Sortable(false).Title(Html.DisplayNameTranslatedFor("", "Users", "Users", ref translation).ToString()).Template(c => Utilities.ActionImageWithText(c.User1.Count.ToString(), customImages.Tooltip, "OwnCustomers", "Home", new { userId = c.Id }));
          columns.Template(navigation => Utilities.ActionImageNavigation("User", new { id = navigation.Id, userRoleId = Utilities.UserRoleReseller() }, customImages.Edit, customImages.Delete))
              .ClientTemplate(Utilities.ActionImageNavigation("User", new {id = "#=Id#"}, customImages.Edit).ToString()).Width(116).Title("");
      })
      .Filterable(filtering => filtering.Enabled(false))
      .Resizable(resizing => resizing.Columns(true))
      .Scrollable(scrolling => scrolling.Enabled(true).Height("auto"))
      .Pageable(paging =>
          paging.PageSizes(new int[] {10, 25, 50, 100, 200, 1000, 2000})
              .PreviousNext(true)
      )
      .Sortable(sorting => sorting.Enabled(true).SortMode(GridSortMode.MultipleColumn)
      )
      )

<div>
    @BreadCrum.ActionLinkStepBack(Session, ref translation)
</div>