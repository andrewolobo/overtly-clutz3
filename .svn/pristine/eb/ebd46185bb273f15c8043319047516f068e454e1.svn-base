@model IEnumerable<Tag4s.Data.UserContract>
@using Tag4s.Helpers;
@using Tag4s.Data
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "Index", "Index", ref translation), controllername.TranslateString(ref translation));
    BreadCrum.SetName(ViewBag.Title, Session);
    switch (filter.Key)
    {
        case Tag4s.Filters.ViewFilterKeys.nofilter:
        default:
            ViewBag.Title = "UserContract".TranslateString(ref translation);
            break;
    }
    BreadCrum.SetName(ViewBag.Title, Session);

    var user = ViewBag.User as User;
}

@section scripts
{
    <script type="text/javascript">

        function collapseMVCGroupedGrids(e) {
            var grid = $('#' + e.target.id);
            $.each(
                grid.find('td.t-group-cell').parent('tr'),
                function(index, value) {
                    $(value).attr('style', 'display: none;');
                }
            );
            $.each(
                grid
                .find('.t-icon'),
                function(index, value) {
                    if ($(value).hasClass('t-collapse')) {
                        $(value).removeClass('t-collapse').addClass('t-expand');
                    }
                });
        }
    </script>
}


<h2>@ViewBag.Title</h2>
<h3>@(user.FullName)</h3>
<h3>Qredits: @(user.Credit)</h3>

<fieldset>
    @(Html.Kendo().Grid(Model)
          .Name("Grid")
          //.Localizable("nl-NL")
          .ToolBar(commands =>
          {
              commands.Template(c => Utilities.ActionImage(customImages.Create, "Create", controllername, new {filterkey = filter.Key, filterid = filter.Id}));
              commands.Template(c => Utilities.ActionImageWithText("New Recipe".TranslateString(ref translation), customImages.Create, "CreateRecipe", "UserContract", null, true, null, null));
              //commands.Template(c => Utilities.ActionImage(customImages.Create, "CreateRecipe", "UserContract", new { filterkey = filter.Key, filterid = filter.Id }));
              //commands.Custom().Text("New Recipe".TranslateString(ref translation)).Name("New Recipe").Action("CreateRecipe", "UserContract", new { filterkey = filter.Key, filterid = filter.Id, cleanupBreadCrumb = false });
          })
          .DataSource(dataBinding =>
              dataBinding
                  .Server()
                  .Model(model => model.Id(m => m.Id))
                  .PageSize(10)
                  .Sort(sortOrder => sortOrder.Add(o => o.Name).Ascending())
          )
          .Columns(columns =>
          {
              //columns.Bound(c => c.Contract.Name).Title("Contract".TranslateString(ref translation));
              //columns.Bound(c => c.User.FullName).Title("User".TranslateString(ref translation));
              columns.Bound(c => c.StartDate).Title("StartDate".TranslateString(ref translation));
              columns.Bound(c => c.EndDate).Title("EndDate".TranslateString(ref translation));
              columns.Bound(c => c.Uri).Title("Uri".TranslateString(ref translation));
              columns.Bound(c => c.Name).Title("Name".TranslateString(ref translation));
              //columns.Bound(c => c.Enabled).Title("Enabled".TranslateString(ref translation));
              //columns.Bound(c => c.UserContractUris.Count).Title(Html.DisplayNameTranslatedFor("", "UserContractUris", "UserContractUris", ref translation).ToString()).Template(c => Utilities.ActionImageWithText(c.UserContractUris.Count.ToString(), customImages.Tooltip, "Index", "UserContractUri", new {userContractId = c.Id}));
              columns.Template(navigation =>
                  Utilities.ActionImageWithText(navigation.UserContractLogs.Count.ToString(), customImages.Tooltip, "PerUserContract", "Statistics", new { id = navigation.Id })).Title("Hits".TranslateString(ref translation));
              columns.Template(navigation =>
                     Utilities.ActionImageNavigation(controllername, new {id = navigation.Id, userid = navigation.UserId} /*, customImages.Csv*/)
              );
              
          })
          .Filterable(filtering => filtering.Enabled(false))
          .Resizable(resizing => resizing.Columns(true))
          .Scrollable(scrolling => scrolling.Enabled(true).Height("auto"))
          .Pageable(paging =>
              paging.PageSizes(new int[] {10, 25, 50, 100, 200, 1000, 2000})
                  .PreviousNext(true)
          )
          .Sortable(sorting => sorting.Enabled(true).SortMode(GridSortMode.MultipleColumn)
          )
          )
</fieldset>

<div>
    @BreadCrum.ActionLinkStepBack(Session, ref translation)
</div>