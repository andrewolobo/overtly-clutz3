@model Tag4s.Data.UserContractLog
@using Tag4s.Data
@using Tag4s.Filters
@using Tag4s.Helpers
@{
    var translation = ViewBag.Translation as Dictionary<string, string>;
    var controllername = ViewBag.ControllerName as string;
    var actionname = ViewBag.ActionName as string;
    var filter = ViewBag.Filter as Tag4s.Filters.ViewFilter;
    //ViewBag.Title = String.Format("{0}-{1}", Html.DisplayNameTranslatedFor("", "UserContractLog", "UserContractLog", ref translation), controllername.TranslateString(ref translation));
    //BreadCrum.SetName(ViewBag.Title, Session);
}

<fieldset class="Tag4s-fieldset">
    <legend>@Html.DisplayNameTranslatedFor("", "UserContractLog", "UserContractLog", ref translation)</legend>
    
    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("UserContractId") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.UserContractId, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.DropDownList("UserContractId", string.Empty)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("DateTime") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.DateTime, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.EditorFor(model => model.DateTime)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("UserAgent") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.UserAgent, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.EditorFor(model => model.UserAgent)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("Host") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.Host, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.EditorFor(model => model.Host)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("ResultUri") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.ResultUri, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.EditorFor(model => model.ResultUri)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("UserContractUri") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.UserContractUri, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.DropDownList("UserContractUri", string.Empty)
        </div>
    </fieldset>

    <fieldset class="no-margin">
        <div class="row @(ViewData.ModelState.ContainsKey("UserContractRedirect") ? "error_" : "")">
            <label>
                @Html.DisplayNameTranslatedFor(m => m.UserContractRedirect, ref translation, TranslationTypes.Entity, controllername, actionname)
            </label>
            @Html.DropDownList("UserContractRedirect", string.Empty)
        </div>
    </fieldset>

    
</fieldset>